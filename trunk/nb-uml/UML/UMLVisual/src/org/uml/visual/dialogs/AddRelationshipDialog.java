/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.uml.visual.dialogs;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Enumeration;
import java.util.List;
import java.util.jar.JarFile;
import javax.management.relation.Relation;
import org.netbeans.api.visual.widget.Widget;
import org.openide.util.Exceptions;
import org.uml.model.HasRelationComponent;
import org.uml.model.ImplementsRelationComponent;
import org.uml.model.IsRelationComponent;
import org.uml.model.RelationComponent;
import org.uml.model.UseRelationComponent;
import org.uml.visual.widgets.ClassDiagramScene;
import org.uml.visual.widgets.ClassWidget;
import org.uml.visual.widgets.InterfaceWidget;

/**
 *
 * @author "NUGS"
 */
public class AddRelationshipDialog extends javax.swing.JDialog {

    /**
     * Creates new form AddRelationshipDialog
     */
    
    ClassDiagramScene classDiagramScene;
    
    public AddRelationshipDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public AddRelationshipDialog(java.awt.Frame parent,ClassDiagramScene classDiagramScene,boolean modal) {
        super(parent, modal);
        initComponents();
        this.classDiagramScene = classDiagramScene;
        fillCombos(true);
    }
    
    
    
    public void fillCombos (boolean isProject) {
        try {
            List<Widget> widgets=classDiagramScene.getMainLayer().getChildren();
            for(Widget widget: widgets) {           //TODO needs a check if it's a ClassWidget or not
                    jcbClassesSource.addItem(widget);
                    jcbClassesTarget.addItem(widget);
                
            }
            JarFile jar;
            if(isProject){
            jar = new JarFile(new File("build/cluster/modules/org-uml-model.jar"));
            }
            else {
            jar = new JarFile(new File("../build/cluster/modules/org-uml-model.jar"));
            }
            Enumeration entries= jar.entries();
            while(entries.hasMoreElements()) {
                String fullUrl = entries.nextElement().toString();
                if(fullUrl.startsWith("org/uml/model/")&& fullUrl.contains("RelationComponent")&&!fullUrl.equals("org/uml/model/RelationComponent.class")) {
                    try {
                        fullUrl= fullUrl.replace(".class", "");
                        fullUrl= fullUrl.replace("/", ".");
                        Class<? extends RelationComponent> forName= (Class<? extends RelationComponent>) Class.forName(fullUrl);
                        jcbRelations.addItem(forName.newInstance());
                    } catch (        InstantiationException | IllegalAccessException | ClassNotFoundException ex) {
                        Exceptions.printStackTrace(ex);
                    }
                }
            }
        } catch (IOException ex) {
            fillCombos(false);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jcbClassesSource = new javax.swing.JComboBox();
        jcbClassesTarget = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jbtnOk = new javax.swing.JButton();
        jbtnCancel = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jcbRelations = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jcbClassesTarget.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbClassesTargetActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(AddRelationshipDialog.class, "AddRelationshipDialog.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(AddRelationshipDialog.class, "AddRelationshipDialog.jLabel2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jbtnOk, org.openide.util.NbBundle.getMessage(AddRelationshipDialog.class, "AddRelationshipDialog.jbtnOk.text")); // NOI18N
        jbtnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnOkActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jbtnCancel, org.openide.util.NbBundle.getMessage(AddRelationshipDialog.class, "AddRelationshipDialog.jbtnCancel.text")); // NOI18N
        jbtnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCancelActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(AddRelationshipDialog.class, "AddRelationshipDialog.jLabel3.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbtnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(jbtnCancel, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jcbClassesTarget, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jcbClassesSource, 0, 136, Short.MAX_VALUE)
                            .addComponent(jcbRelations, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jcbClassesSource, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jcbClassesTarget, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbRelations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnOk)
                    .addComponent(jbtnCancel))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnOkActionPerformed
         try {
        String packageURL= "org.uml.model.";
        packageURL += jcbRelations.getSelectedItem().toString()+"RelationComponent";
       
        Class<? extends RelationComponent> forName= (Class<? extends RelationComponent>) Class.forName(packageURL);
        RelationComponent relation = forName.newInstance();

    if(jcbClassesSource.getSelectedItem() instanceof ClassWidget && jcbClassesTarget.getSelectedItem() instanceof ClassWidget) {
        ClassWidget source= (ClassWidget)jcbClassesSource.getSelectedItem();
        ClassWidget target= (ClassWidget)jcbClassesTarget.getSelectedItem();        
         classDiagramScene.addEdge(relation);
         classDiagramScene.setEdgeSource(relation, source.getClassComponent());
         classDiagramScene.setEdgeTarget(relation, target.getClassComponent());
    }
    else if (jcbClassesSource.getSelectedItem() instanceof InterfaceWidget && jcbClassesTarget.getSelectedItem() instanceof ClassWidget) {
         InterfaceWidget source= (InterfaceWidget)jcbClassesSource.getSelectedItem();
         ClassWidget target= (ClassWidget)jcbClassesTarget.getSelectedItem();        
         classDiagramScene.addEdge(relation);
         classDiagramScene.setEdgeSource(relation, source.getInterfaceComponent());
         classDiagramScene.setEdgeTarget(relation, target.getClassComponent());
    }
    else if (jcbClassesSource.getSelectedItem() instanceof ClassWidget && jcbClassesTarget.getSelectedItem() instanceof InterfaceWidget) {
         ClassWidget source= (ClassWidget)jcbClassesSource.getSelectedItem();
         InterfaceWidget target= (InterfaceWidget)jcbClassesTarget.getSelectedItem();        
         classDiagramScene.addEdge(relation);
         classDiagramScene.setEdgeSource(relation, source.getClassComponent());
         classDiagramScene.setEdgeTarget(relation, target.getInterfaceComponent());
    }
        else if (jcbClassesSource.getSelectedItem() instanceof InterfaceWidget && jcbClassesTarget.getSelectedItem() instanceof InterfaceWidget) {
         InterfaceWidget source= (InterfaceWidget)jcbClassesSource.getSelectedItem();
         InterfaceWidget target= (InterfaceWidget)jcbClassesTarget.getSelectedItem();        
         classDiagramScene.addEdge(relation);
         classDiagramScene.setEdgeSource(relation, source.getInterfaceComponent());
         classDiagramScene.setEdgeTarget(relation, target.getInterfaceComponent());
    }
         classDiagramScene.validate();
         
        } catch (InstantiationException ex) {
            Exceptions.printStackTrace(ex);
        } catch (IllegalAccessException ex) {
            Exceptions.printStackTrace(ex);
        }
         catch (ClassNotFoundException ex) {
            Exceptions.printStackTrace(ex);
         }
            this.dispose();
    }//GEN-LAST:event_jbtnOkActionPerformed

    private void jbtnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_jbtnCancelActionPerformed

    private void jcbClassesTargetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbClassesTargetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbClassesTargetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddRelationshipDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddRelationshipDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddRelationshipDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddRelationshipDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AddRelationshipDialog dialog = new AddRelationshipDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton jbtnCancel;
    private javax.swing.JButton jbtnOk;
    private javax.swing.JComboBox jcbClassesSource;
    private javax.swing.JComboBox jcbClassesTarget;
    private javax.swing.JComboBox jcbRelations;
    // End of variables declaration//GEN-END:variables
}
