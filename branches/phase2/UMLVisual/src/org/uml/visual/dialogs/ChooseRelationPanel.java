/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.uml.visual.dialogs;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import org.uml.model.CardinalityEnum;
import org.uml.model.HasRelationComponent;
import org.uml.model.RelationComponent;

/**
 *
 * @author Uros
 */
public class ChooseRelationPanel extends javax.swing.JPanel {

    /**
     * Creates new form ChooseRelationPanel
     */
    public ChooseRelationPanel() {
        initComponents();
        fillCollectionsComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbxRelationship = new javax.swing.JComboBox<RelationComponent>();
        lblRelationType = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        txfName = new javax.swing.JTextField();
        lblCardinalitySource = new javax.swing.JLabel();
        lblCardinalityTarget = new javax.swing.JLabel();
        cbxCardinalitySource = new javax.swing.JComboBox<CardinalityEnum>();
        cbxCardinalityTarget = new javax.swing.JComboBox<CardinalityEnum>();
        lblCollectionType = new javax.swing.JLabel();
        cbxCollectionType = new javax.swing.JComboBox<String>();

        cbxRelationship.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxRelationshipActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(lblRelationType, org.openide.util.NbBundle.getMessage(ChooseRelationPanel.class, "ChooseRelationPanel.lblRelationType.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblName, org.openide.util.NbBundle.getMessage(ChooseRelationPanel.class, "ChooseRelationPanel.lblName.text")); // NOI18N

        txfName.setText(org.openide.util.NbBundle.getMessage(ChooseRelationPanel.class, "ChooseRelationPanel.txfName.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblCardinalitySource, org.openide.util.NbBundle.getMessage(ChooseRelationPanel.class, "ChooseRelationPanel.lblCardinalitySource.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblCardinalityTarget, org.openide.util.NbBundle.getMessage(ChooseRelationPanel.class, "ChooseRelationPanel.lblCardinalityTarget.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblCollectionType, org.openide.util.NbBundle.getMessage(ChooseRelationPanel.class, "ChooseRelationPanel.lblCollectionType.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblCardinalityTarget, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblCardinalitySource, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblCollectionType, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblRelationType, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(cbxCardinalityTarget, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbxCollectionType, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(cbxRelationship, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txfName)
                        .addComponent(cbxCardinalitySource, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRelationType)
                    .addComponent(cbxRelationship, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(txfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxCardinalitySource, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCardinalitySource))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxCardinalityTarget, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCardinalityTarget))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCollectionType)
                    .addComponent(cbxCollectionType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cbxRelationshipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxRelationshipActionPerformed
        RelationComponent relation = (RelationComponent) cbxRelationship.getSelectedItem();
        if (!(relation instanceof HasRelationComponent)) {
            txfName.setEnabled(false);
            cbxCollectionType.setEnabled(false);
        } else {
            txfName.setEnabled(true);
            cbxCollectionType.setEnabled(true);
        }
    }//GEN-LAST:event_cbxRelationshipActionPerformed

    public String getNameFieldValue() {
        return txfName.getText();
    }

    public RelationComponent getRelationComponent() {
        return (RelationComponent) cbxRelationship.getSelectedItem();
    }

    public JComboBox<RelationComponent> getRelationComponentsComboBox() {
        return cbxRelationship;
    }

    public JTextField getNameTextField() {
        return txfName;
    }

    public JComboBox<CardinalityEnum> getCardinalitySourceComboBox() {
        return cbxCardinalitySource;
    }

    public JComboBox<CardinalityEnum> getCardinalityTargetComboBox() {
        return cbxCardinalityTarget;
    }

    public String getCollectionType() {
        return cbxCollectionType.getSelectedItem().toString();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<CardinalityEnum> cbxCardinalitySource;
    private javax.swing.JComboBox<CardinalityEnum> cbxCardinalityTarget;
    private javax.swing.JComboBox<String> cbxCollectionType;
    private javax.swing.JComboBox<RelationComponent> cbxRelationship;
    private javax.swing.JLabel lblCardinalitySource;
    private javax.swing.JLabel lblCardinalityTarget;
    private javax.swing.JLabel lblCollectionType;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblRelationType;
    private javax.swing.JTextField txfName;
    // End of variables declaration//GEN-END:variables

    private void fillCollectionsComboBox() {
        String[] collectionTypes = new String[]{"List", "ArrayList", "LinkedList"};
        cbxCollectionType.removeAllItems();
        cbxCollectionType.setModel(new DefaultComboBoxModel<>(collectionTypes));
        cbxCollectionType.setSelectedIndex(0);
        cbxCollectionType.setEditable(true);
    }

}
