package org.uml.visual.dialogs;

import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import org.netbeans.api.visual.widget.Widget;
import org.uml.model.relations.CardinalityEnum;
import org.uml.visual.widgets.ComponentWidgetBase;

/**
 *
 * @author Uros
 */
public class ClassHasRelationPanel extends javax.swing.JPanel {

    /**
     * Creates new form ClassHasRelationPanel
     */
    ComponentWidgetBase source;

    public ClassHasRelationPanel(ComponentWidgetBase source) {
        initComponents();
        this.source = source;
        lblRelationType.setText("Has");
        fillCombo(this.source);
        fillCollectionsComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTarget = new javax.swing.JLabel();
        cbxTarget = new javax.swing.JComboBox<Widget>();
        lblCardinalityTarget = new javax.swing.JLabel();
        cbxCardTarget = new javax.swing.JComboBox<CardinalityEnum>();
        lblName = new javax.swing.JLabel();
        txfName = new javax.swing.JTextField();
        lblSource = new javax.swing.JLabel();
        lblSourceClass = new javax.swing.JLabel();
        lblRelation = new javax.swing.JLabel();
        lblRelationType = new javax.swing.JLabel();
        cbxCollectionType = new javax.swing.JComboBox<String>();
        lblCollectionType = new javax.swing.JLabel();
        lblCardinalitySource = new javax.swing.JLabel();
        cbxCardinalitySource = new javax.swing.JComboBox<CardinalityEnum>();

        org.openide.awt.Mnemonics.setLocalizedText(lblTarget, org.openide.util.NbBundle.getMessage(ClassHasRelationPanel.class, "ClassHasRelationPanel.lblTarget.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblCardinalityTarget, org.openide.util.NbBundle.getMessage(ClassHasRelationPanel.class, "ClassHasRelationPanel.lblCardinalityTarget.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblName, org.openide.util.NbBundle.getMessage(ClassHasRelationPanel.class, "ClassHasRelationPanel.lblName.text")); // NOI18N

        txfName.setText(org.openide.util.NbBundle.getMessage(ClassHasRelationPanel.class, "ClassHasRelationPanel.txfName.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblSource, org.openide.util.NbBundle.getMessage(ClassHasRelationPanel.class, "ClassHasRelationPanel.lblSource.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblSourceClass, org.openide.util.NbBundle.getMessage(ClassHasRelationPanel.class, "ClassHasRelationPanel.lblSourceClass.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblRelation, org.openide.util.NbBundle.getMessage(ClassHasRelationPanel.class, "ClassHasRelationPanel.lblRelation.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblRelationType, org.openide.util.NbBundle.getMessage(ClassHasRelationPanel.class, "ClassHasRelationPanel.lblRelationType.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblCollectionType, org.openide.util.NbBundle.getMessage(ClassHasRelationPanel.class, "ClassHasRelationPanel.lblCollectionType.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblCardinalitySource, org.openide.util.NbBundle.getMessage(ClassHasRelationPanel.class, "ClassHasRelationPanel.lblCardinalitySource.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblRelation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(11, 11, 11)
                                .addComponent(lblRelationType, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblCardinalityTarget, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(11, 11, 11)
                                .addComponent(cbxCardTarget, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblSource, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                    .addComponent(lblTarget, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblSourceClass, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbxTarget, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txfName)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblCollectionType, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                                .addComponent(cbxCollectionType, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCardinalitySource, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(cbxCardinalitySource, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblRelationType, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblRelation))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblSource)
                    .addComponent(lblSourceClass, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTarget)
                    .addComponent(cbxTarget, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(txfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxCardinalitySource, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCardinalitySource))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCardinalityTarget)
                    .addComponent(cbxCardTarget, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCollectionType)
                    .addComponent(cbxCollectionType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<CardinalityEnum> cbxCardTarget;
    private javax.swing.JComboBox<CardinalityEnum> cbxCardinalitySource;
    private javax.swing.JComboBox<String> cbxCollectionType;
    private javax.swing.JComboBox<Widget> cbxTarget;
    private javax.swing.JLabel lblCardinalitySource;
    private javax.swing.JLabel lblCardinalityTarget;
    private javax.swing.JLabel lblCollectionType;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblRelation;
    private javax.swing.JLabel lblRelationType;
    private javax.swing.JLabel lblSource;
    private javax.swing.JLabel lblSourceClass;
    private javax.swing.JLabel lblTarget;
    private javax.swing.JTextField txfName;
    // End of variables declaration//GEN-END:variables

    private void fillCombo(ComponentWidgetBase widget) {
        List<Widget> widgets = widget.getClassDiagramScene().getMainLayer().getChildren();
        for (Widget w : widgets) {
            if (!w.equals(widget) && w instanceof ComponentWidgetBase) {
                cbxTarget.addItem(w);
            }
        }
        
        cbxCardTarget.addItem(CardinalityEnum.One2Many);
        cbxCardTarget.addItem(CardinalityEnum.Zero2Many);
        lblSourceClass.setText(source.getName());
    }
    
    private void fillCollectionsComboBox() {
        String[] collectionTypes = new String[]{"List", "ArrayList", "LinkedList"};
        cbxCollectionType.removeAllItems();
        cbxCollectionType.setModel(new DefaultComboBoxModel<>(collectionTypes));
        cbxCollectionType.setSelectedIndex(0);
        cbxCollectionType.setEditable(true);
    }

    public JComboBox<Widget> getComboBoxTarget() {
        return cbxTarget;
    }

    public JComboBox<CardinalityEnum> getComboBoxCardinalityTarget() {
        return cbxCardTarget;
    }

    public String getRelationName() {
        return txfName.getText();
    }

    public String getCollectionType() {
        return cbxCollectionType.getSelectedItem().toString();
    }
}
