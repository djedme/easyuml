/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.uml.visual.dialogs;

import java.io.File;
import java.io.IOException;
import java.util.Enumeration;
import java.util.List;
import java.util.jar.JarEntry;
import java.util.jar.JarFile;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import org.netbeans.api.visual.widget.Widget;
import org.openide.util.Exceptions;
import org.uml.model.CardinalityEnum;
import org.uml.model.HasRelationComponent;
import org.uml.model.ImplementsRelationComponent;
import org.uml.model.IsRelationComponent;
import org.uml.model.RelationComponent;
import org.uml.model.UseRelationComponent;
import org.uml.visual.widgets.ClassDiagramScene;
import org.uml.visual.widgets.ClassWidget;
import org.uml.visual.widgets.ComponentWidgetBase;
import org.uml.visual.widgets.EnumWidget;
import org.uml.visual.widgets.InterfaceWidget;

/**
 *
 * @author "NUGS"
 */
public class AddRelationDialog extends javax.swing.JDialog {

    /**
     * Creates new form AddRelationDialog
     */
    ClassDiagramScene classDiagramScene;

    public AddRelationDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        fillCollectionsComboBox();
    }

    public AddRelationDialog(java.awt.Frame parent, ClassDiagramScene classDiagramScene, boolean modal) {
        super(parent, modal);
        initComponents();
        this.classDiagramScene = classDiagramScene;
        setTitle("Add Relation");
        fillCombos(true);
        fillCollectionsComboBox();
    }

    public final void fillCombos(boolean isProject) {
        try {
            /* List<Widget> widgets=classDiagramScene.getMainLayer().getChildren();
             for(Widget widget: widgets) {           //TODO needs a check if it's a ClassWidget or not
             jcbClassesSource.addItem(widget);
             jcbClassesTarget.addItem(widget);
                
             } */
            JarFile jar;
            if (isProject) {
                jar = new JarFile(new File("build/cluster/modules/org-uml-model.jar"));
            } else {
                jar = new JarFile(new File("../build/cluster/modules/org-uml-model.jar"));
            }
            Enumeration<JarEntry> entries = jar.entries();
            while (entries.hasMoreElements()) {
                String fullUrl = entries.nextElement().toString();
                if (fullUrl.startsWith("org/uml/model/") && fullUrl.contains("RelationComponent") && !fullUrl.equals("org/uml/model/RelationComponent.class")) {
                    try {
                        fullUrl = fullUrl.replace(".class", "");
                        fullUrl = fullUrl.replace("/", ".");
                        Class<? extends RelationComponent> forName = (Class<? extends RelationComponent>) Class.forName(fullUrl);
                        cbxRelations.addItem(forName.newInstance());
                    } catch (InstantiationException | IllegalAccessException | ClassNotFoundException ex) {
                        Exceptions.printStackTrace(ex);
                    }
                }
            }
            cbxRelations.setSelectedItem(null);
            cbxCardinalitySource.removeAllItems();
            cbxCardinalityTarget.removeAllItems();
            cbxClassesSource.removeAllItems();
            cbxClassesTarget.removeAllItems();
        } catch (IOException ex) {
            fillCombos(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbxClassesSource = new javax.swing.JComboBox<Widget>();
        cbxClassesTarget = new javax.swing.JComboBox<Widget>();
        lblSource = new javax.swing.JLabel();
        lblTarget = new javax.swing.JLabel();
        btnOk = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblRelationType = new javax.swing.JLabel();
        cbxRelations = new javax.swing.JComboBox<RelationComponent>();
        lblName = new javax.swing.JLabel();
        txfName = new javax.swing.JTextField();
        cbxCardinalityTarget = new javax.swing.JComboBox<CardinalityEnum>();
        cbxCardinalitySource = new javax.swing.JComboBox<CardinalityEnum>();
        lblCardinalityTarget = new javax.swing.JLabel();
        lblCardinalitySource = new javax.swing.JLabel();
        lblCollectionType = new javax.swing.JLabel();
        cbxCollectionType = new javax.swing.JComboBox<String>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        cbxClassesSource.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxClassesSourceActionPerformed(evt);
            }
        });

        cbxClassesTarget.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxClassesTargetActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(lblSource, org.openide.util.NbBundle.getMessage(AddRelationDialog.class, "AddRelationDialog.lblSource.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblTarget, org.openide.util.NbBundle.getMessage(AddRelationDialog.class, "AddRelationDialog.lblTarget.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(btnOk, org.openide.util.NbBundle.getMessage(AddRelationDialog.class, "AddRelationDialog.btnOk.text")); // NOI18N
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(btnCancel, org.openide.util.NbBundle.getMessage(AddRelationDialog.class, "AddRelationDialog.btnCancel.text")); // NOI18N
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(lblRelationType, org.openide.util.NbBundle.getMessage(AddRelationDialog.class, "AddRelationDialog.lblRelationType.text")); // NOI18N

        cbxRelations.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxRelationsActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(lblName, org.openide.util.NbBundle.getMessage(AddRelationDialog.class, "AddRelationDialog.lblName.text")); // NOI18N

        txfName.setText(org.openide.util.NbBundle.getMessage(AddRelationDialog.class, "AddRelationDialog.txfName.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblCardinalityTarget, org.openide.util.NbBundle.getMessage(AddRelationDialog.class, "AddRelationDialog.lblCardinalityTarget.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblCardinalitySource, org.openide.util.NbBundle.getMessage(AddRelationDialog.class, "AddRelationDialog.lblCardinalitySource.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblCollectionType, org.openide.util.NbBundle.getMessage(AddRelationDialog.class, "AddRelationDialog.lblCollectionType.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblRelationType, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblCardinalitySource, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                    .addComponent(lblSource, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTarget, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(54, 54, 54))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCardinalityTarget, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCollectionType, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbxCardinalityTarget, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbxCardinalitySource, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbxClassesSource, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbxRelations, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txfName, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbxCollectionType, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(cbxClassesTarget, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxRelations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRelationType, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(txfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSource)
                    .addComponent(cbxClassesSource, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTarget)
                    .addComponent(cbxClassesTarget, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxCardinalitySource, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCardinalitySource))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCardinalityTarget)
                    .addComponent(cbxCardinalityTarget, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCollectionType)
                    .addComponent(cbxCollectionType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOk)
                    .addComponent(btnCancel))
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed

        if (cbxRelations.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Please choose relation!", "Error!", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            String packageURL = "org.uml.model.";
            packageURL += cbxRelations.getSelectedItem().toString() + "RelationComponent";

            Class<? extends RelationComponent> forName = (Class<? extends RelationComponent>) Class.forName(packageURL);
            RelationComponent relation = forName.newInstance();
            relation.setName(txfName.getText());

            if (cbxClassesSource.getSelectedItem() instanceof ComponentWidgetBase && cbxClassesTarget.getSelectedItem() instanceof ComponentWidgetBase) {
                ComponentWidgetBase source = (ComponentWidgetBase) cbxClassesSource.getSelectedItem();
                ComponentWidgetBase target = (ComponentWidgetBase) cbxClassesTarget.getSelectedItem();
                relation.setSource(source.getComponent());
                relation.setTarget(target.getComponent());
                if (relation instanceof HasRelationComponent) {
                    HasRelationComponent hasRelation = (HasRelationComponent) relation;
                    hasRelation.setCardinalitySource((CardinalityEnum) cbxCardinalitySource.getSelectedItem());
                    hasRelation.setCardinalityTarget((CardinalityEnum) cbxCardinalityTarget.getSelectedItem());
                    String name = txfName.getText();
                    if (name != null && !name.equals("")) {
                        hasRelation.setName(name);
                    }
                    if (hasRelation.getCardinalityTarget().equals(CardinalityEnum.One2Many) || hasRelation.getCardinalityTarget().equals(CardinalityEnum.Zero2Many)) {
                        String collectionType = cbxCollectionType.getSelectedItem().toString();
                        if (collectionType == null && collectionType.equals("")) {
                            collectionType = "List";
                        }
                        hasRelation.setCollectionType(collectionType);
                    }
                }
                if (relation instanceof UseRelationComponent) {
                    UseRelationComponent useRelation = (UseRelationComponent) relation;
                    useRelation.setCardinalitySource((CardinalityEnum) cbxCardinalitySource.getSelectedItem());
                    useRelation.setCardinalityTarget((CardinalityEnum) cbxCardinalityTarget.getSelectedItem());
                }
                classDiagramScene.addEdge(relation);
                classDiagramScene.setEdgeSource(relation, source.getComponent());
                classDiagramScene.setEdgeTarget(relation, target.getComponent());
            }

            classDiagramScene.validate();

        } catch (InstantiationException ex) {
            Exceptions.printStackTrace(ex);
        } catch (IllegalAccessException ex) {
            Exceptions.printStackTrace(ex);
        } catch (ClassNotFoundException ex) {
            Exceptions.printStackTrace(ex);
        }
        this.dispose();
    }//GEN-LAST:event_btnOkActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void cbxClassesTargetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxClassesTargetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxClassesTargetActionPerformed

    private void cbxClassesSourceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxClassesSourceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxClassesSourceActionPerformed

    private void cbxRelationsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxRelationsActionPerformed
        if (cbxRelations.getSelectedItem() instanceof HasRelationComponent) {
            txfName.setEnabled(true);
            cbxCardinalityTarget.removeAllItems();
            cbxCardinalityTarget.addItem(CardinalityEnum.One2Many);
            cbxCardinalityTarget.addItem(CardinalityEnum.Zero2Many);
            cbxCardinalityTarget.addItem(CardinalityEnum.One2One);
            cbxCardinalityTarget.addItem(CardinalityEnum.Zero2One);
            cbxCardinalitySource.removeAllItems();
            cbxCardinalitySource.setEnabled(false);
            cbxCardinalityTarget.setEnabled(true);
            cbxCollectionType.setEnabled(true);
            List<Widget> widgets = classDiagramScene.getMainLayer().getChildren();
            cbxClassesSource.removeAllItems();
            cbxClassesTarget.removeAllItems();
            for (Widget widget : widgets) {
                if (!(widget instanceof EnumWidget)) {
                    cbxClassesSource.addItem(widget);
                }
                cbxClassesTarget.addItem(widget);
            }

        } else {
            txfName.setEnabled(false);
            cbxCollectionType.setEnabled(false);
        }
        if (cbxRelations.getSelectedItem() instanceof IsRelationComponent) {
            cbxCardinalityTarget.removeAllItems();
            txfName.setEnabled(false);
            //comboBoxCardinalityTarget.addItem(CardinalityEnum.One2One);
            //comboBoxCardinalityTarget.addItem(CardinalityEnum.Zero2One);
            cbxCardinalitySource.removeAllItems();
            cbxCardinalitySource.setEnabled(false);
            cbxCardinalityTarget.setEnabled(false);

            List<Widget> widgets = classDiagramScene.getMainLayer().getChildren();
            cbxClassesSource.removeAllItems();
            cbxClassesTarget.removeAllItems();
            for (Widget widget : widgets) {
                if (widget instanceof ClassWidget) {
                    cbxClassesSource.addItem(widget);
                    cbxClassesTarget.addItem(widget);
                }
            }

        }
        if (cbxRelations.getSelectedItem() instanceof UseRelationComponent) {
            txfName.setEnabled(true);
            cbxCardinalityTarget.removeAllItems();
            cbxCardinalityTarget.addItem(CardinalityEnum.One2Many);
            cbxCardinalityTarget.addItem(CardinalityEnum.Zero2Many);
            cbxCardinalityTarget.addItem(CardinalityEnum.One2One);
            cbxCardinalityTarget.addItem(CardinalityEnum.Zero2One);
            cbxCardinalitySource.addItem(CardinalityEnum.One2Many);
            cbxCardinalitySource.addItem(CardinalityEnum.Zero2Many);
            cbxCardinalitySource.addItem(CardinalityEnum.One2One);
            cbxCardinalitySource.addItem(CardinalityEnum.Zero2One);
            cbxCardinalitySource.setEnabled(true);
            cbxCardinalityTarget.setEnabled(true);

            List<Widget> widgets = classDiagramScene.getMainLayer().getChildren();
            cbxClassesSource.removeAllItems();
            cbxClassesTarget.removeAllItems();
            for (Widget widget : widgets) {
                cbxClassesSource.addItem(widget);
                cbxClassesTarget.addItem(widget);
            }

        }
        if (cbxRelations.getSelectedItem() instanceof ImplementsRelationComponent) {
            txfName.setEnabled(false);
            cbxCardinalitySource.setEnabled(false);
            cbxCardinalityTarget.setEnabled(false);

            List<Widget> widgets = classDiagramScene.getMainLayer().getChildren();
            cbxClassesSource.removeAllItems();
            cbxClassesTarget.removeAllItems();
            for (Widget widget : widgets) {
                if (widget instanceof ClassWidget) {
                    cbxClassesSource.addItem(widget);
                }
                if (widget instanceof InterfaceWidget) {
                    cbxClassesTarget.addItem(widget);
                }
            }

        }
    }//GEN-LAST:event_cbxRelationsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddRelationDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddRelationDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddRelationDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddRelationDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AddRelationDialog dialog = new AddRelationDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOk;
    private javax.swing.JComboBox<CardinalityEnum> cbxCardinalitySource;
    private javax.swing.JComboBox<CardinalityEnum> cbxCardinalityTarget;
    private javax.swing.JComboBox<Widget> cbxClassesSource;
    private javax.swing.JComboBox<Widget> cbxClassesTarget;
    private javax.swing.JComboBox<String> cbxCollectionType;
    private javax.swing.JComboBox<RelationComponent> cbxRelations;
    private javax.swing.JLabel lblCardinalitySource;
    private javax.swing.JLabel lblCardinalityTarget;
    private javax.swing.JLabel lblCollectionType;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblRelationType;
    private javax.swing.JLabel lblSource;
    private javax.swing.JLabel lblTarget;
    private javax.swing.JTextField txfName;
    // End of variables declaration//GEN-END:variables

    public void setRelationSelectedItem(RelationComponent rc) {
        cbxRelations.setSelectedItem(rc);
        validate();
    }

    public JComboBox<RelationComponent> getRelationComponents() {
        return cbxRelations;
    }

    private void fillCollectionsComboBox() {
        String[] collectionTypes = new String[]{"List", "ArrayList", "LinkedList"};
        cbxCollectionType.removeAllItems();
        cbxCollectionType.setModel(new DefaultComboBoxModel<String>(collectionTypes));
        cbxCollectionType.setSelectedIndex(0);
        cbxCollectionType.setEditable(true);
    }
}
