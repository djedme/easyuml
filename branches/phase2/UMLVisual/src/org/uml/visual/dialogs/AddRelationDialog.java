/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.uml.visual.dialogs;

import java.io.File;
import java.io.IOException;
import java.util.Enumeration;
import java.util.List;
import java.util.jar.JarFile;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import org.netbeans.api.visual.widget.Widget;
import org.openide.util.Exceptions;
import org.uml.model.CardinalityEnum;
import org.uml.model.HasRelationComponent;
import org.uml.model.ImplementsRelationComponent;
import org.uml.model.IsRelationComponent;
import org.uml.model.RelationComponent;
import org.uml.model.UseRelationComponent;
import org.uml.visual.widgets.ClassDiagramScene;
import org.uml.visual.widgets.ClassWidget;
import org.uml.visual.widgets.ComponentWidgetBase;
import org.uml.visual.widgets.EnumWidget;
import org.uml.visual.widgets.InterfaceWidget;

/**
 *
 * @author "NUGS"
 */
public class AddRelationDialog extends javax.swing.JDialog {

    /**
     * Creates new form AddRelationDialog
     */
    
    ClassDiagramScene classDiagramScene;
    
    public AddRelationDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        fillCollectionsComboBox();
    }

    public AddRelationDialog(java.awt.Frame parent,ClassDiagramScene classDiagramScene,boolean modal) {
        super(parent, modal);
        initComponents();
        this.classDiagramScene = classDiagramScene;
        fillCombos(true);
        fillCollectionsComboBox();
    }
    
    
    
    public void fillCombos (boolean isProject) {
        try {
           /* List<Widget> widgets=classDiagramScene.getMainLayer().getChildren();
            for(Widget widget: widgets) {           //TODO needs a check if it's a ClassWidget or not
                    jcbClassesSource.addItem(widget);
                    jcbClassesTarget.addItem(widget);
                
            } */
            JarFile jar;
            if(isProject){
            jar = new JarFile(new File("build/cluster/modules/org-uml-model.jar"));
            }
            else {
            jar = new JarFile(new File("../build/cluster/modules/org-uml-model.jar"));
            }
            Enumeration entries= jar.entries();
            while(entries.hasMoreElements()) {
                String fullUrl = entries.nextElement().toString();
                if(fullUrl.startsWith("org/uml/model/")&& fullUrl.contains("RelationComponent")&&!fullUrl.equals("org/uml/model/RelationComponent.class")) {
                    try {
                        fullUrl= fullUrl.replace(".class", "");
                        fullUrl= fullUrl.replace("/", ".");
                        Class<? extends RelationComponent> forName= (Class<? extends RelationComponent>) Class.forName(fullUrl);
                        jcbRelations.addItem(forName.newInstance());
                    } catch (        InstantiationException | IllegalAccessException | ClassNotFoundException ex) {
                        Exceptions.printStackTrace(ex);
                    }
                }
            }
            jcbRelations.setSelectedItem(null);
            comboBoxCardinalitySource.removeAllItems();
            comboBoxCardinalityTarget.removeAllItems();
            jcbClassesSource.removeAllItems();
            jcbClassesTarget.removeAllItems();
        } catch (IOException ex) {
            fillCombos(false);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jcbClassesSource = new javax.swing.JComboBox();
        jcbClassesTarget = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jbtnOk = new javax.swing.JButton();
        jbtnCancel = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jcbRelations = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        textFieldName = new javax.swing.JTextField();
        comboBoxCardinalityTarget = new javax.swing.JComboBox();
        comboBoxCardinalitySource = new javax.swing.JComboBox();
        labelCardinalityTarget = new javax.swing.JLabel();
        labelCardinalitySource = new javax.swing.JLabel();
        labelCardinalityTarget1 = new javax.swing.JLabel();
        comboBoxCollectionType = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jcbClassesSource.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbClassesSourceActionPerformed(evt);
            }
        });

        jcbClassesTarget.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbClassesTargetActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(AddRelationDialog.class, "AddRelationDialog.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(AddRelationDialog.class, "AddRelationDialog.jLabel2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jbtnOk, org.openide.util.NbBundle.getMessage(AddRelationDialog.class, "AddRelationDialog.jbtnOk.text")); // NOI18N
        jbtnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnOkActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jbtnCancel, org.openide.util.NbBundle.getMessage(AddRelationDialog.class, "AddRelationDialog.jbtnCancel.text")); // NOI18N
        jbtnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCancelActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(AddRelationDialog.class, "AddRelationDialog.jLabel3.text")); // NOI18N

        jcbRelations.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbRelationsActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(AddRelationDialog.class, "AddRelationDialog.jLabel4.text")); // NOI18N

        textFieldName.setText(org.openide.util.NbBundle.getMessage(AddRelationDialog.class, "AddRelationDialog.textFieldName.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(labelCardinalityTarget, org.openide.util.NbBundle.getMessage(AddRelationDialog.class, "AddRelationDialog.labelCardinalityTarget.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(labelCardinalitySource, org.openide.util.NbBundle.getMessage(AddRelationDialog.class, "AddRelationDialog.labelCardinalitySource.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(labelCardinalityTarget1, org.openide.util.NbBundle.getMessage(AddRelationDialog.class, "AddRelationDialog.labelCardinalityTarget1.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelCardinalitySource, javax.swing.GroupLayout.PREFERRED_SIZE, 124, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(54, 54, 54))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelCardinalityTarget, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbtnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelCardinalityTarget1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(comboBoxCardinalityTarget, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboBoxCardinalitySource, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jcbClassesSource, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jcbRelations, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(textFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboBoxCollectionType, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(jcbClassesTarget, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jbtnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbRelations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(textFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jcbClassesSource, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jcbClassesTarget, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxCardinalitySource, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCardinalitySource))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCardinalityTarget)
                    .addComponent(comboBoxCardinalityTarget, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCardinalityTarget1)
                    .addComponent(comboBoxCollectionType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnOk)
                    .addComponent(jbtnCancel))
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnOkActionPerformed

        if(jcbRelations.getSelectedItem()==null){
            JOptionPane.showMessageDialog(this, "Please choose relation!", "Error!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
        String packageURL= "org.uml.model.";
        packageURL += jcbRelations.getSelectedItem().toString()+"RelationComponent";
       
        Class<? extends RelationComponent> forName= (Class<? extends RelationComponent>) Class.forName(packageURL);
        RelationComponent relation = forName.newInstance();
        relation.setName(textFieldName.getText());
        
    if(jcbClassesSource.getSelectedItem() instanceof ComponentWidgetBase && jcbClassesTarget.getSelectedItem() instanceof ComponentWidgetBase) {
        ComponentWidgetBase source= (ComponentWidgetBase) jcbClassesSource.getSelectedItem();
        ComponentWidgetBase target= (ComponentWidgetBase)jcbClassesTarget.getSelectedItem(); 
        relation.setSource(source.getComponent());
        relation.setTarget(target.getComponent());
        if(relation instanceof HasRelationComponent) {
            HasRelationComponent hasRelation = (HasRelationComponent) relation;
            hasRelation.setCardinalitySource((CardinalityEnum)comboBoxCardinalitySource.getSelectedItem());
            hasRelation.setCardinalityTarget((CardinalityEnum)comboBoxCardinalityTarget.getSelectedItem());
            if (hasRelation.getCardinalityTarget().equals(CardinalityEnum.One2Many) || hasRelation.getCardinalityTarget().equals(CardinalityEnum.Zero2Many)) {
                String collectionType = comboBoxCollectionType.getSelectedItem().toString();
                if (collectionType == null && collectionType.equals("")) {
                    collectionType = "List";
                }
                hasRelation.setCollectionType(collectionType);
            }
        }
        if(relation instanceof UseRelationComponent) {
            UseRelationComponent useRelation = (UseRelationComponent) relation;
            useRelation.setCardinalitySource((CardinalityEnum)comboBoxCardinalitySource.getSelectedItem());
            useRelation.setCardinalityTarget((CardinalityEnum)comboBoxCardinalityTarget.getSelectedItem());
        }
        classDiagramScene.addEdge(relation);
        classDiagramScene.setEdgeSource(relation, source.getComponent());
        classDiagramScene.setEdgeTarget(relation, target.getComponent());
    }

         classDiagramScene.validate();
         
        } catch (InstantiationException ex) {
            Exceptions.printStackTrace(ex);
        } catch (IllegalAccessException ex) {
            Exceptions.printStackTrace(ex);
        }
         catch (ClassNotFoundException ex) {
            Exceptions.printStackTrace(ex);
         }
            this.dispose();
    }//GEN-LAST:event_jbtnOkActionPerformed

    private void jbtnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_jbtnCancelActionPerformed

    private void jcbClassesTargetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbClassesTargetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbClassesTargetActionPerformed

    private void jcbClassesSourceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbClassesSourceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbClassesSourceActionPerformed

    private void jcbRelationsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbRelationsActionPerformed
        if(jcbRelations.getSelectedItem() instanceof HasRelationComponent) {
            textFieldName.setEnabled(true);
            comboBoxCardinalityTarget.removeAllItems();
            comboBoxCardinalityTarget.addItem(CardinalityEnum.One2Many);
            comboBoxCardinalityTarget.addItem(CardinalityEnum.Zero2Many);
            comboBoxCardinalityTarget.addItem(CardinalityEnum.One2One);
            comboBoxCardinalityTarget.addItem(CardinalityEnum.Zero2One);
            comboBoxCardinalitySource.removeAllItems();
            comboBoxCardinalitySource.setEnabled(false);
            comboBoxCardinalityTarget.setEnabled(true);
            comboBoxCollectionType.setEnabled(true);
            List<Widget> widgets=classDiagramScene.getMainLayer().getChildren();
            jcbClassesSource.removeAllItems();
            jcbClassesTarget.removeAllItems();
            for(Widget widget: widgets) {           
                if(!(widget instanceof EnumWidget)){
                    jcbClassesSource.addItem(widget);
                }
                    jcbClassesTarget.addItem(widget);                                  
            }
   
        }else {
            comboBoxCollectionType.setEnabled(false);
        }
        if(jcbRelations.getSelectedItem() instanceof IsRelationComponent) {
            comboBoxCardinalityTarget.removeAllItems();
            textFieldName.setEnabled(false);
            //comboBoxCardinalityTarget.addItem(CardinalityEnum.One2One);
            //comboBoxCardinalityTarget.addItem(CardinalityEnum.Zero2One);
            comboBoxCardinalitySource.removeAllItems();
            comboBoxCardinalitySource.setEnabled(false);
            comboBoxCardinalityTarget.setEnabled(false);
            
            List<Widget> widgets=classDiagramScene.getMainLayer().getChildren();
            jcbClassesSource.removeAllItems();
            jcbClassesTarget.removeAllItems();
            for(Widget widget: widgets) {           
                if(widget instanceof ClassWidget){
                    jcbClassesSource.addItem(widget);
                    jcbClassesTarget.addItem(widget);    
                }                                
            }
            
        }
        if(jcbRelations.getSelectedItem() instanceof UseRelationComponent) {
            textFieldName.setEnabled(true);
            comboBoxCardinalityTarget.removeAllItems();
            comboBoxCardinalityTarget.addItem(CardinalityEnum.One2Many);
            comboBoxCardinalityTarget.addItem(CardinalityEnum.Zero2Many);
            comboBoxCardinalityTarget.addItem(CardinalityEnum.One2One);
            comboBoxCardinalityTarget.addItem(CardinalityEnum.Zero2One);    
            comboBoxCardinalitySource.addItem(CardinalityEnum.One2Many);
            comboBoxCardinalitySource.addItem(CardinalityEnum.Zero2Many);
            comboBoxCardinalitySource.addItem(CardinalityEnum.One2One);
            comboBoxCardinalitySource.addItem(CardinalityEnum.Zero2One);
            comboBoxCardinalitySource.setEnabled(true);
            comboBoxCardinalityTarget.setEnabled(true);
            
            List<Widget> widgets=classDiagramScene.getMainLayer().getChildren();
            jcbClassesSource.removeAllItems();
            jcbClassesTarget.removeAllItems();
            for(Widget widget: widgets) {           
                    jcbClassesSource.addItem(widget);
                    jcbClassesTarget.addItem(widget);                             
            }
            
        }
       if (jcbRelations.getSelectedItem() instanceof ImplementsRelationComponent) {
            textFieldName.setEnabled(false);
            comboBoxCardinalitySource.setEnabled(false);
            comboBoxCardinalityTarget.setEnabled(false);
            
            List<Widget> widgets=classDiagramScene.getMainLayer().getChildren();
            jcbClassesSource.removeAllItems();
            jcbClassesTarget.removeAllItems();
            for(Widget widget: widgets) {      
                if(widget instanceof ClassWidget) {
                    jcbClassesSource.addItem(widget);
                }
                if(widget instanceof InterfaceWidget) {
                    jcbClassesTarget.addItem(widget);  
                }
            }
            
       }
    }//GEN-LAST:event_jcbRelationsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddRelationDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddRelationDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddRelationDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddRelationDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AddRelationDialog dialog = new AddRelationDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox comboBoxCardinalitySource;
    private javax.swing.JComboBox comboBoxCardinalityTarget;
    private javax.swing.JComboBox comboBoxCollectionType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton jbtnCancel;
    private javax.swing.JButton jbtnOk;
    private javax.swing.JComboBox jcbClassesSource;
    private javax.swing.JComboBox jcbClassesTarget;
    private javax.swing.JComboBox jcbRelations;
    private javax.swing.JLabel labelCardinalitySource;
    private javax.swing.JLabel labelCardinalityTarget;
    private javax.swing.JLabel labelCardinalityTarget1;
    private javax.swing.JTextField textFieldName;
    // End of variables declaration//GEN-END:variables

    
    public void setRelationSelectedItem (RelationComponent rc) {
       jcbRelations.setSelectedItem(rc);
       validate();
    }
    public JComboBox getRelationComponents () {
        return jcbRelations;
    }
    
    private void fillCollectionsComboBox() {
        String[] collectionTypes = new String[]{"List", "ArrayList", "LinkedList"};
        comboBoxCollectionType.removeAllItems();
        comboBoxCollectionType.setModel(new DefaultComboBoxModel(collectionTypes));
        comboBoxCollectionType.setSelectedIndex(0);
        comboBoxCollectionType.setEditable(true);
    }
}
